{"version":3,"sources":["About.js","Team.js","Contact.js","Header.js","Form.jsx","Gmap.js","TripInfo.js","utils/utils.js","ContentContainer.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["About","console","log","className","Team","href","Contact","action","method","class","for","id","type","name","placeholder","rows","Header","location","useLocation","useTranslation","t","i18n","getFlexFLow","flexFlow","language","style","flexGrow","pathname","to","onChange","event","target","checked","changeLanguage","htmlFor","submitButtonStyle","backgroundColor","Form","props","setDestinationName","setDepartureTime","setOriginName","handleSubmit","originValue","destinationValue","destinationError","originError","routeNotFoundError","departureTimeError","departureTime","getAlignment","textAlign","onSubmit","e","value","color","containerStyle","height","Gmap","center","onLoad","onUnmount","originPosition","destinationPosition","onOriginDragEnd","onDestinationDragEnd","mapContainerStyle","zoom","label","draggable","onDragEnd","position","children","TripInfo","tripDuration","tripDistance","tripPrice","hours","minutes","scrollIntoView","require","ContentContainer","useState","originName","destinationName","lat","lng","originCoords","setOriginCoords","destinationCoords","setDestinationCoords","setTripPrice","setTripDuration","setTripDistance","Date","geocoder","setGeocoder","service","setService","useJsApiLoader","googleMapsApiKey","process","isLoaded","loadError","originErrorMessage","setOriginErrorMessage","destinationErrorMessage","setDestinationErrorMessage","setRouteNotFoundError","showTripInfo","setShowTripInfo","React","map","setMap","useCallback","window","google","maps","Geocoder","DistanceMatrixService","getTripData","a","departureDate","splitTime","split","setHours","setMinutes","request","origins","destinations","travelMode","TravelMode","DRIVING","unitSystem","UnitSystem","METRIC","drivingOptions","avoidHighways","avoidTolls","getDistanceMatrix","response","originFormattedName","originAddresses","destinationFormattedName","destinationAddresses","status","elements","distanceInMeters","distance","text","durationInSeconds","duration","geocodeLocations","geocode","address","originValues","destinationValues","_originCoords","results","geometry","_destinationCoords","makeTripInfo","_tripPrice","distanceInKm","durationInHours","parseFloat","toFixed","calculateFare","parseInt","Math","round","calculateTime","preventDefault","bounds","LatLngBounds","extend","fitBounds","setZoom","getZoom","document","getElementById","querySelector","latLng","backgroundImage","primary","App","path","config","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","initReactI18next","init","debug","fallbackLng","keySeparator","interpolation","escapeValue","resources","en","translation","translationEng","header","headerEng","form","formEng","ar","translationAr","headerAr","formAr","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fdfb5f1f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      {console.log(\"rendering About\")}\r\n      <div className=\"container\">\r\n        <h1>Calculate taxi fares in Egypt</h1>\r\n        <p>\r\n          Best thing about taxis in Egypt is that they are supposed to be fairly\r\n          cheap. Unluckily a lot of the times when taking a taxi, the taxi\r\n          driver won't turn on the taximeter (device used to calculate pasenger\r\n          fares) at the beggining of the trip, and once arrived to the\r\n          destination they will go ahead and overcharge the passenger, who at\r\n          this point has no way of establishing the real price of the trip.{\" \"}\r\n        </p>\r\n        <p>\r\n          This small web app aims at solving exactly this problem by allowing\r\n          you to get a very accurate estimate of how much you should be paying\r\n          based on the distance and duration of a trip. The app works by doing\r\n          the same math that the taximeter would have done. All the parameters\r\n          used are based on data released by the ministry of transportation in\r\n          Egypt.\r\n        </p>\r\n        <p>The formula used is the following:</p>\r\n        <ul>\r\n          <li>Initial Fare: 7 EGP </li>\r\n          <li>First Kilometer is free then for every extra Km: 3 EGP </li>\r\n          <li>the first hour is: 17 EGP</li>\r\n          <li>every subsequent hour is: 8 EGP</li>\r\n        </ul>\r\n        <p>So for example a 2km trip that lasts 6 min would be: </p>\r\n        <code>7EGP+(1*3EGP)+ (10%*17EGP) = 11.7 EGP</code>\r\n        <br />\r\n        <br />\r\n\r\n        <p>A 20km trip that lasts 2 hours would be: </p>\r\n        <code>\r\n          (7EGP for the initial fare + first kilometer) + (19*3EGP for the\r\n          following 19 kilometers) + (17EGP for the first hour) + (8EGP for the\r\n          second hour) = 89EGP\r\n        </code>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Team() {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1>About the developer of the app</h1>\r\n        <p>\r\n          Like the saying goes &ldquo;<em>There is no I in team</em> &rdquo;.\r\n          Unless you are a one man team, then it goes more like &ldquo;\r\n          <em>There is no team. There's only I</em> &rdquo;. hehe...heh...\r\n        </p>\r\n        <p>\r\n          Ok, ok...bad jokes aside. I am Karim a freelance developer out of\r\n          Egypt. I added this page to the website just in case someone who\r\n          stumbles upon this app also happens to be looking for a full stack\r\n          developer for a fairly competetive price.\r\n        </p>\r\n        <p>\r\n          checkout out my portfolio{\" \"}\r\n          <a href=\"https://karimkamel.github.io/portfolio/\">portfolio</a> and\r\n          use the contact form on the contact page if you feel like getting in\r\n          touch.\r\n        </p>\r\n        ,\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const url = \"https://formspree.io/f/mleoqwog\";\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>We appreciate your feedback!</h1>\r\n      <p>\r\n        Feel free to drop us a line if you have any comments or suggestions\r\n        regarding the app.\r\n      </p>\r\n      <form action={url} method=\"POST\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"exampleFormControlInput1\"\r\n            type=\"email\"\r\n            name=\"_replyto\"\r\n            placeholder=\"name@example.com\"\r\n          />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Your message:\r\n          </label>\r\n          <textarea\r\n            name=\"message\"\r\n            class=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-dark mb-3\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function Header() {\r\n  const location = useLocation();\r\n  // const { t, i18n } = useTranslation([\"translation\", \"header\"]);\r\n  const { t, i18n } = useTranslation();\r\n  // const [doTranslation, setDoTranslation] = useState(false);\r\n  function getFlexFLow() {\r\n    return { flexFlow: `${i18n.language === \"ar\" ? \"row-reverse\" : \"\"}` };\r\n  }\r\n\r\n  const onLanguageChange = event => {\r\n    if (event.target.checked === false) {\r\n      console.log(\"in false\");\r\n\r\n      i18n.changeLanguage(\"en\");\r\n    } else {\r\n      console.log(\"in true\");\r\n\r\n      i18n.changeLanguage(\"ar\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"container \">\r\n        <nav\r\n          className=\"navbar navbar-expand-md no-gutters\"\r\n          style={getFlexFLow()}>\r\n          <div className=\"col text-left\">\r\n            <h3 className=\"logo\">Egypt Taxi Price</h3>\r\n          </div>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav4\"\r\n            aria-controls=\"navbarNav4\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div\r\n            className=\"collapse navbar-collapse justify-content-center col \"\r\n            style={{ flexGrow: \"0\" }}\r\n            id=\"navbarNav4\">\r\n            <ul\r\n              className=\"navbar-nav justify-content-center mx-3 \"\r\n              style={getFlexFLow()}>\r\n              <li\r\n                className={`nav-item ${\r\n                  location.pathname === \"/\" ? \"active\" : \"\"\r\n                }`}>\r\n                <Link className=\"nav-link \" to=\"/\">\r\n                  {t(\"header:home\")}\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={`nav-item ${\r\n                  location.pathname === \"/about\" ? \"active\" : \"\"\r\n                }`}>\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {t(\"header:about\")}\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={`nav-item ${\r\n                  location.pathname === \"contact\" ? \"active\" : \"\"\r\n                }`}>\r\n                <Link className=\"nav-link\" to=\"/Contact\">\r\n                  {t(\"header:contact\")}\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={`nav-item ${\r\n                  location.pathname === \"/team\" ? \"active\" : \"\"\r\n                }`}>\r\n                <Link className=\"nav-link\" to=\"/team\">\r\n                  {t(\"header:team\")}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <ul className=\"navbar-nav col  d-none d-md-flex \">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link\"\r\n                href=\"https://www.facebook.com/karim.kamel.568\">\r\n                <i className=\"fab fa-facebook\"></i>\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"https://github.com/KarimKamel\">\r\n                <i className=\"fab fa-github\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div class=\"custom-control custom-switch d-flex flex-row \">\r\n            <label\r\n              class=\"form-check-label d-block mx-2\"\r\n              for=\"flexSwitchCheckDefault\">\r\n              En\r\n            </label>\r\n            <div class=\"form-check form-switch language-switch p-0 mt-1\">\r\n              <input\r\n                class=\"form-check-input m-0 p-0\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onChange={onLanguageChange}\r\n              />\r\n            </div>\r\n            <label\r\n              class=\"form-check-label d-block mx-2\"\r\n              htmlFor=\"flexSwitchCheckDefault\">\r\n              Ar\r\n            </label>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TimePicker from \"react-time-picker\";\r\n\r\nconst submitButtonStyle = { backgroundColor: \"rgb(160 16 16)\" };\r\n\r\nexport default function Form(props) {\r\n  const {\r\n    setDestinationName,\r\n    setDepartureTime,\r\n    setOriginName,\r\n    handleSubmit,\r\n    originValue,\r\n    destinationValue,\r\n    destinationError,\r\n    originError,\r\n    routeNotFoundError,\r\n    departureTimeError,\r\n    departureTime,\r\n    i18n,\r\n    t,\r\n  } = props;\r\n\r\n  function getAlignment() {\r\n    return { textAlign: i18n.language === \"en\" ? \"left\" : \"right\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 col-lg-6 col-xl-6 text-left\">\r\n      <form action=\"\" onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1 style={getAlignment()}>{t(\"form:title\")}</h1>\r\n            <p className=\"lead\" style={getAlignment()}>\r\n              {t(\"form:subtitle\")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col mt-4\" style={getAlignment()}>\r\n            <label htmlFor=\"originInput\">{t(\"form:from\")}</label>\r\n            <input\r\n              style={getAlignment()}\r\n              id=\"originInput\"\r\n              type=\"text\"\r\n              onChange={e => setOriginName(e.target.value)}\r\n              className=\"form-control\"\r\n              value={originValue}\r\n              placeholder={t(\"form:origin\")}\r\n            />\r\n\r\n            {originError && (\r\n              <p style={{ color: \"red\", ...getAlignment() }}>\r\n                {t(\"form:searchErrorMessage\")}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-4 \" style={getAlignment()}>\r\n          <div className=\"col\">\r\n            <label style={getAlignment()} htmlFor=\"destinationInput\">\r\n              {t(\"form:to\")}\r\n            </label>\r\n            <input\r\n              style={getAlignment()}\r\n              id=\"destinationInput\"\r\n              type=\"text\"\r\n              onChange={e => setDestinationName(e.target.value)}\r\n              className=\"form-control\"\r\n              value={destinationValue}\r\n              placeholder={t(\"form:destination\")}\r\n            />\r\n            {destinationError && (\r\n              <p style={{ color: \"red\", ...getAlignment() }}>\r\n                {t(\"form:searchErrorMessage\")}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col\" style={getAlignment()}>\r\n            <label className=\"m-0\" htmlFor=\"departureTimeInput\">\r\n              {t(\"form:departure time\")}\r\n            </label>\r\n            <br />\r\n            <small className=\"mb-3 d-inline-block\">\r\n              {t(\"form:asterisk message\")}\r\n            </small>\r\n\r\n            <TimePicker\r\n              className=\"form-control\"\r\n              onChange={setDepartureTime}\r\n              value={departureTime}\r\n            />\r\n\r\n            {departureTimeError && (\r\n              <p style={{ color: \"red\", ...getAlignment() }}>\r\n                {t(\"form:departureTimeErrorMessage\")}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col\" style={getAlignment()}>\r\n            <button\r\n              style={submitButtonStyle}\r\n              className=\"btn btn-dark submit-btn\"\r\n              type=\"submit\">\r\n              {t(\"form:submit\")}\r\n            </button>\r\n\r\n            {routeNotFoundError && (\r\n              <p style={{ color: \"red\" }}>{t(\"form:routeErrorMessage\")}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  height: \"400px\",\r\n};\r\n\r\nexport default function Gmap(props) {\r\n  const {\r\n    center,\r\n    onLoad,\r\n    onUnmount,\r\n    originPosition,\r\n    destinationPosition,\r\n\r\n    onOriginDragEnd,\r\n    onDestinationDragEnd,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 col-lg-6 col-xl-6 text-left px-lg-4\">\r\n      <div className=\"row  my-md-3 my-lg-3\">\r\n        <div className=\"col\">\r\n          <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={center}\r\n            zoom={13}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}>\r\n            {/* Child components, such as markers, info windows, etc. */}\r\n            <>\r\n              {originPosition && (\r\n                <Marker\r\n                  label={\"start\"}\r\n                  draggable={true}\r\n                  onDragEnd={onOriginDragEnd}\r\n                  position={originPosition}\r\n                />\r\n              )}\r\n              {destinationPosition && (\r\n                <Marker\r\n                  label={\"end\"}\r\n                  position={destinationPosition}\r\n                  draggable={true}\r\n                  onDragEnd={onDestinationDragEnd}\r\n                />\r\n              )}\r\n            </>\r\n          </GoogleMap>\r\n        </div>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./TripInfo.css\";\r\n\r\nexport default function TripInfo(props) {\r\n  const { tripDuration, tripDistance, tripPrice, id } = props;\r\n  return (\r\n    <div class=\"col-12 px-lg-4 d-flex \">\r\n      {tripDistance !== 0 && (\r\n        <div id={id} className=\"trip-info-container w-100 text-center my-md-3 \">\r\n          <h3 className=\"mt-3 \">\r\n            Trip Duration:{\" \"}\r\n            <span>\r\n              {\" \"}\r\n              {`${tripDuration.hours}`} hours and {`${tripDuration.minutes}`}{\" \"}\r\n              minutes\r\n            </span>\r\n          </h3>\r\n          <h3>\r\n            Trip Distance: <span>{`${tripDistance}`} Km</span>\r\n          </h3>\r\n          <h3>\r\n            tripPrice: <span>{`${tripPrice}`} EGP</span>{\" \"}\r\n          </h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const startingFee = 7;\r\nconst firstHourFee = 17;\r\nconst extraHourFee = 8;\r\nconst KilometerFee = 3;\r\nfunction calculateFare(distanceInMeters, durationInSeconds) {\r\n  const distanceInKm = distanceInMeters / 1000;\r\n  const durationInHours = durationInSeconds / (60 * 60);\r\n\r\n  const distanceFare = distanceInKm > 1 ? (distanceInKm - 1) * KilometerFee : 0;\r\n\r\n  const durationFare =\r\n    durationInHours < 1\r\n      ? firstHourFee * durationInHours\r\n      : firstHourFee + (durationInHours - 1) * extraHourFee;\r\n  const totalFare = startingFee + distanceFare + durationFare;\r\n\r\n  return parseFloat(totalFare.toFixed(2));\r\n}\r\nconst calculateTime = durationInSeconds => {\r\n  const durationInHours = durationInSeconds / (60 * 60);\r\n  const hours = parseInt(durationInHours);\r\n  const minutes = (durationInHours - hours) * 60;\r\n  return { hours, minutes: Math.round(minutes) };\r\n};\r\nexport { calculateTime, calculateFare };\r\n","import { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Gmap from \"./Gmap\";\r\nimport TripInfo from \"./TripInfo\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { calculateFare, calculateTime } from \"./utils/utils\";\r\nvar scrollIntoView = require(\"scroll-into-view\");\r\n\r\nexport default function ContentContainer() {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [originName, setOriginName] = useState(\"\");\r\n  const [destinationName, setDestinationName] = useState(\"\");\r\n  const [center, setCenter] = useState({ lat: 30, lng: 31 }); //cairo\r\n  const [originCoords, setOriginCoords] = useState();\r\n  const [destinationCoords, setDestinationCoords] = useState();\r\n  const [tripPrice, setTripPrice] = useState(0);\r\n  const [tripDuration, setTripDuration] = useState({ hours: 0, minutes: 0 });\r\n  const [tripDistance, setTripDistance] = useState(0);\r\n  const [departureTime, setDepartureTime] = useState(new Date());\r\n\r\n  const [geocoder, setGeocoder] = useState(null);\r\n  const [service, setService] = useState(null);\r\n\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    language: \"en\",\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const [originErrorMessage, setOriginErrorMessage] = useState(false);\r\n  const [destinationErrorMessage, setDestinationErrorMessage] = useState(false);\r\n  const [routeNotFoundError, setRouteNotFoundError] = useState(false);\r\n  const [showTripInfo, setShowTripInfo] = useState(false);\r\n\r\n  const [map, setMap] = React.useState(null);\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    setMap(map);\r\n    var geocoder = new window.google.maps.Geocoder();\r\n    var service = new window.google.maps.DistanceMatrixService();\r\n    setGeocoder(geocoder);\r\n    setService(service);\r\n  }, []);\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  async function getTripData(originName, destinationName) {\r\n    //if departure time has been changed by the user it will be returned in string format\r\n    //if so, create a new date object with departure time and make sure departure time is not in the past\r\n    //else create a new date object and use that as departure time\r\n    var departureDate = new Date();\r\n    if (departureTime && typeof departureTime === \"string\") {\r\n      const splitTime = departureTime.split(\":\");\r\n\r\n      departureDate.setHours(splitTime[0]);\r\n      departureDate.setMinutes(splitTime[1]);\r\n      console.log(departureDate);\r\n      if (departureDate < new Date()) {\r\n        departureDate = new Date();\r\n      }\r\n    }\r\n\r\n    //create a distanceMatrix service request using origin name, destination name and departure time\r\n\r\n    const request = {\r\n      origins: [originName],\r\n      destinations: [destinationName],\r\n      travelMode: window.google.maps.TravelMode.DRIVING,\r\n      unitSystem: window.google.maps.UnitSystem.METRIC,\r\n      drivingOptions: {\r\n        departureTime: departureDate,\r\n      },\r\n      avoidHighways: false,\r\n      avoidTolls: false,\r\n    };\r\n\r\n    //call distance matrix service\r\n\r\n    var response;\r\n    try {\r\n      response = await service.getDistanceMatrix(request);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    const originFormattedName = response.originAddresses[0];\r\n    const destinationFormattedName = response.destinationAddresses[0];\r\n    const status = response.rows[0].elements[0].status;\r\n    var distanceInMeters;\r\n    var durationInSeconds;\r\n    if (status === \"OK\") {\r\n      distanceInMeters = response.rows[0].elements[0].distance.value;\r\n      console.log(\"distance text:\", response.rows[0].elements[0].distance.text);\r\n      durationInSeconds = response.rows[0].elements[0].duration.value;\r\n      console.log(\"duration text:\", response.rows[0].elements[0].duration.text);\r\n    }\r\n\r\n    return {\r\n      status,\r\n      distanceInMeters,\r\n      durationInSeconds,\r\n      originFormattedName,\r\n      destinationFormattedName,\r\n    };\r\n  }\r\n\r\n  //geocode location converts location formatted names into coords\r\n\r\n  async function geocodeLocations(\r\n    originFormattedName,\r\n    destinationFormattedName\r\n  ) {\r\n    const originValues = await geocoder.geocode({\r\n      address: originFormattedName,\r\n    });\r\n    const destinationValues = await geocoder.geocode({\r\n      address: destinationFormattedName,\r\n    });\r\n    const _originCoords = originValues.results[0].geometry.location;\r\n    const _destinationCoords = destinationValues.results[0].geometry.location;\r\n    return { _originCoords, _destinationCoords };\r\n  }\r\n\r\n  //fill in the fields that make up the trip info banner\r\n  //show the trip info banner\r\n\r\n  function makeTripInfo(\r\n    originFormattedName,\r\n    destinationFormattedName,\r\n\r\n    distanceInMeters,\r\n    durationInSeconds\r\n  ) {\r\n    const _tripPrice = calculateFare(distanceInMeters, durationInSeconds);\r\n\r\n    //convert trip time to hours and minutes\r\n\r\n    const { hours, minutes } = calculateTime(durationInSeconds);\r\n\r\n    //set trip distance in state\r\n\r\n    setTripDistance(distanceInMeters / 1000);\r\n\r\n    //set trip duration in state\r\n\r\n    setTripDuration({ hours, minutes });\r\n\r\n    //set trip price in state\r\n\r\n    setTripPrice(_tripPrice);\r\n    setDestinationName(destinationFormattedName);\r\n    setOriginName(originFormattedName);\r\n    setShowTripInfo(true);\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    setRouteNotFoundError(false);\r\n    setOriginErrorMessage(false);\r\n    setDestinationErrorMessage(false);\r\n    e.preventDefault();\r\n\r\n    //get trip duration, distance, origin and destination formatted names using distance matrix service\r\n    try {\r\n      const {\r\n        status,\r\n        distanceInMeters,\r\n        durationInSeconds,\r\n        originFormattedName,\r\n        destinationFormattedName,\r\n      } = await getTripData(originName, destinationName);\r\n\r\n      if (status === \"OK\") {\r\n        //if distance matrix service does not return any error, fill in\r\n        //the fields making up the trip info banner and show the trip info banner\r\n        makeTripInfo(\r\n          originFormattedName,\r\n          destinationFormattedName,\r\n          distanceInMeters,\r\n          durationInSeconds\r\n        );\r\n      } else if (status === \"ZERO_RESULTS\") {\r\n        //zero results means no route connecting origin and destination was found\r\n        //show error message accordingly\r\n\r\n        setRouteNotFoundError(true);\r\n        setShowTripInfo(false);\r\n        setOriginErrorMessage(false);\r\n        setDestinationErrorMessage(false);\r\n\r\n        setDestinationName(destinationFormattedName);\r\n        setOriginName(originFormattedName);\r\n      } else {\r\n        //if execution reaches this point it means origin or destination were not found\r\n        //show error message accordingly\r\n        setRouteNotFoundError(false);\r\n        setShowTripInfo(false);\r\n        if (destinationFormattedName)\r\n          setDestinationName(destinationFormattedName);\r\n        else setDestinationErrorMessage(true);\r\n        if (originFormattedName) setOriginName(originFormattedName);\r\n        else setOriginErrorMessage(true);\r\n      }\r\n\r\n      //get origin and destination coords from their name using geocode service.\r\n\r\n      const { _originCoords, _destinationCoords } = await geocodeLocations(\r\n        originFormattedName,\r\n        destinationFormattedName\r\n      );\r\n\r\n      //set origin and destination coords in state and pass them to markers as props\r\n\r\n      setOriginCoords(_originCoords);\r\n      setDestinationCoords(_destinationCoords);\r\n\r\n      //fit map bounds to display origin and destination\r\n\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      bounds.extend(_originCoords);\r\n      bounds.extend(_destinationCoords);\r\n      map.fitBounds(bounds);\r\n\r\n      //adjust zoom to show both markers\r\n\r\n      map.setZoom(map.getZoom() - 1);\r\n      console.log(document.getElementById(\"target\"));\r\n      scrollIntoView(document.querySelector(\"#target\"));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const onOriginDragEnd = async e => {\r\n    const {\r\n      distanceInMeters,\r\n      durationInSeconds,\r\n      originFormattedName,\r\n      destinationFormattedName,\r\n    } = await getTripData(e.latLng, destinationName);\r\n    console.log(\"from: \", originFormattedName);\r\n    console.log(\"to: \", destinationFormattedName);\r\n    makeTripInfo(\r\n      originFormattedName,\r\n      destinationFormattedName,\r\n      distanceInMeters,\r\n      durationInSeconds\r\n    );\r\n  };\r\n  const onDestinationDragEnd = async e => {\r\n    const {\r\n      distanceInMeters,\r\n      durationInSeconds,\r\n      originFormattedName,\r\n      destinationFormattedName,\r\n    } = await getTripData(originName, e.latLng);\r\n    console.log(\"from: \", originFormattedName);\r\n    console.log(\"to: \", destinationFormattedName);\r\n    makeTripInfo(\r\n      originFormattedName,\r\n      destinationFormattedName,\r\n      distanceInMeters,\r\n      durationInSeconds\r\n    );\r\n\r\n    //get trip fare based on duration and distance\r\n  };\r\n  return (\r\n    <section className=\"fdb-block py-0 mt-4\">\r\n      {loadError && (\r\n        <p class=\"text-danger text-text-center\">\r\n          Error loading google maps api. Try refreshing the page.\r\n        </p>\r\n      )}\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{ backgroundImage: \"url(imgs/shapes/6.svg)\" }}>\r\n        <div className=\"row\">\r\n          <Form\r\n            handleSubmit={handleSubmit}\r\n            originValue={originName}\r\n            destinationValue={destinationName}\r\n            setOriginName={setOriginName}\r\n            setDestinationName={setDestinationName}\r\n            setDepartureTime={setDepartureTime}\r\n            destinationError={destinationErrorMessage}\r\n            originError={originErrorMessage}\r\n            routeNotFoundError={routeNotFoundError}\r\n            departureTime={departureTime}\r\n            i18n={i18n}\r\n            primary={true}\r\n            t={t}\r\n          />\r\n\r\n          {isLoaded && (\r\n            <Gmap\r\n              center={center}\r\n              onLoad={onLoad}\r\n              onUnmount={onUnmount}\r\n              originPosition={originCoords}\r\n              destinationPosition={destinationCoords}\r\n              onOriginDragEnd={onOriginDragEnd}\r\n              onDestinationDragEnd={onDestinationDragEnd}>\r\n              {showTripInfo && (\r\n                <TripInfo\r\n                  id=\"#tripInfo\"\r\n                  tripPrice={tripPrice}\r\n                  tripDistance={tripDistance}\r\n                  tripDuration={tripDuration}\r\n                />\r\n              )}\r\n            </Gmap>\r\n          )}\r\n          <div id=\"target\"></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport About from \"./About\";\nimport Team from \"./Team\";\nimport Contact from \"./Contact\";\nimport Header from \"./Header\";\nimport ContentContainer from \"./ContentContainer\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nrequire(\"dotenv\").config();\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/team\">\n          <Team />\n        </Route>\n        <Route path=\"/\">\n          <ContentContainer />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n// import LanguageDetector from \"i18next-browser-languagedetector\";\r\n// import XHR from \"i18next-xhr-backend\";\r\nimport translationEng from \"./locales/en/translation.json\";\r\nimport translationAr from \"./locales/ar/translation.json\";\r\nimport headerEng from \"./locales/en/header.json\";\r\nimport headerAr from \"./locales/ar/header.json\";\r\nimport formEng from \"./locales/en/form.json\";\r\nimport formAr from \"./locales/ar/form.json\";\r\n\r\ni18n\r\n\r\n  //   .use(XHR)\r\n  .use(initReactI18next)\r\n\r\n  //   .use(LanguageDetector)\r\n\r\n  .init({\r\n    debug: true,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n    keySeparator: false,\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n\r\n    resources: {\r\n      en: {\r\n        translation: translationEng,\r\n        header: headerEng,\r\n        form: formEng,\r\n      },\r\n\r\n      ar: {\r\n        translation: translationAr,\r\n        header: headerAr,\r\n        form: formAr,\r\n      },\r\n    },\r\n\r\n    // ns: [\"translation\", \"header\"],\r\n    // defaultNS: \"translation\",\r\n  });\r\n\r\nexport default i18n;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}